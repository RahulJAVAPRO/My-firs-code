/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        Stack<Integer> currentPath = new Stack<>();
        pathAdd(root, targetSum, result, currentPath);
        return result;
    }
    private void pathAdd(TreeNode node, int target, List<List<Integer>> result, Stack<Integer> currentPath){
        if(node == null){
            return;
        }
        currentPath.push(node.val);
        if(node.left == null && node.right == null && node.val == target){
            result.add(new ArrayList<>(currentPath));
        }else{
            pathAdd(node.left, target - node.val, result, currentPath);
            pathAdd(node.right, target - node.val, result, currentPath);
        }
        currentPath.pop();
    }
}
