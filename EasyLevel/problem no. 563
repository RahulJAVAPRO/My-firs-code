/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int totalTilt = 0;
    public int findTilt(TreeNode root) {
        if(root == null) return 0;
        yesTilt(root);
        return totalTilt;
    }
    private int yesTilt(TreeNode node){
        if(node == null) return 0;
        int leftnode = yesTilt(node.left);
        int rightnode = yesTilt(node.right);
        totalTilt += Math.abs(leftnode - rightnode);
        return node.val + leftnode + rightnode;
    }
}
